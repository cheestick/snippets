{
  // JSON
  "script:build": {
    "scope": "json",
    "prefix": "build",
    "body": ["\"build\": \"$1\""],
    "description": "build script"
  },
  "script:start": {
    "scope": "json",
    "prefix": "start",
    "body": ["\"start\": \"$1\""],
    "description": "start script"
  },
  "script:dev": {
    "scope": "json",
    "prefix": "dev",
    "body": ["\"dev\": \"$1\""],
    "description": "dev script"
  },
  // HTML
  // html-HEAD-META
  "favicon:manifest:robots": {
    "scope": "html",
    "prefix": "favman",
    "body": [
      "<link rel='apple-touch-icon' sizes='180x180' href='${1:src/favicon}/apple-touch-icon.png' />",
      "<link rel='icon' type='image/png' sizes='32x32' href='${1:src/favicon}/favicon-32x32.png' />",
      "<link rel='icon' type='image/png' sizes='16x16' href='${1:src/favicon}/favicon-16x16.png' />",
      "<link rel='manifest' href='/site.webmanifest' />",
      "<meta name=\"robots\" content=\"index, follow, max-image-preview:large\" />"
    ],
    "description": "linking icons and manifest files"
  },
  "theme-color:color-scheme": {
    "scope": "html",
    "prefix": "theme-color-scheme",
    "body": [
      "<meta name=\"theme-color\" content=\"${1:#0b0b0b}\" />",
      "<meta name=\"color-scheme\" content=\"${2|normal,dark,light,light dark,dark light|}\" />"
    ],
    "description": "meta description and keywords"
  },
  "seo:description:keywords": {
    "scope": "html",
    "prefix": "desckey",
    "body": [
      "<meta name=\"description\" content=\"${1:seo descripion <150 chars}\" />",
      "<meta name=\"keywords\" content=\"${2:keywords and phrases, max 20 words}\" />"
    ],
    "description": "meta description and keywords"
  },
  // html-CONTAINERS
  "group:container": {
    "scope": "html",
    "prefix": "container",
    "body": [
      "<div class=\"$1__container\">",
      "\t${2:$TM_SELECTED_TEXT}",
      "</div>"
    ],
    "description": "div *-container"
  },
  // html-BODY
  "picture:webp:avif": {
    "scope": "html",
    "prefix": "pic",
    "body": [
      "<picture>",
      "\t<source srcset='$1.webp 1x, $1@2x.webp 2x, $1@3x.webp 3x' type='image/werbp'/>",
      "\t<source srcset='$1.avif 1x, $1@2x.avif 2x, $1@3x.avif 3x' type='image/avif'/>",
      "\t<source srcset='$1.$2 1x, $1@2x.$2 2x, $1@3x.$2 3x' type='image/$2'/>",
      "\t${TM_SELECTED_TEXT:<img loading='lazy' src='$1.${2|jpeg,png|}' width='${3:100}' height='${4:$3}' alt='$5'/>}",
      "</picture>"
    ],
    "description": "picture tag for webp and avif"
  },
  "figcation:picture:webp:avif": {
    "scope": "html",
    "prefix": "figcpic",
    "body": [
      "<figure>",
      "\t<picture>",
      "\t\t<source srcset='$1.webp 1x, $1@2x.webp 2x, $1@3x.webp 3x' type='image/werbp'/>",
      "\t\t<source srcset='$1.avif 1x, $1@2x.avif 2x, $1@3x.avif 3x' type='image/avif'/>",
      "\t\t<source srcset='$1.$2 1x, $1@2x.$2 2x, $1@3x.$2 3x' type='image/$2'/>",
      "\t\t${TM_SELECTED_TEXT:<img loading='lazy' src='$1.${2|jpeg,png|}' width='${3:100}' height='${4:$3}' alt='$5'/>}",
      "\t</picture>",
      "<figcaption>${6:caption}</figcaption>",
      "</figure>"
    ],
    "description": "wrapped in figure-figcation picture tag for webp and avif"
  },
  "figure:figcaption": {
    "scope": "html",
    "prefix": "figfc",
    "body": [
      "<figure>",
      "\t<figcaption>$2</figcaption>",
      "\t${1:${TM_SELECTED_TEXT}}",
      "</figure>"
    ],
    "description": "picture tag for webp and avif"
  },
  // Javascript
  "Arrow fn:export": {
    "scope": "javascript,typescript",
    "prefix": "afexp",
    "body": [
      "export const ${1:${TM_FILENAME_BASE}} = ($2) => {",
      "\t${3:${TM_SELECTED_TEXT}}",
      "}"
    ],
    "description": "export const arrow function"
  },
  "Arrow fn": {
    "scope": "javascript",
    "prefix": "af",
    "body": [
      "const ${1:${TM_FILENAME_BASE}} = ($2) => {",
      "\t${3:${TM_SELECTED_TEXT}}",
      "}"
    ],
    "description": "arrow function"
  },
  "Arrow fn:export:short": {
    "scope": "javascript",
    "prefix": "afsexp",
    "body": [
      "export const ${1:${TM_FILENAME_BASE}} = ($2) => ${3:${TM_SELECTED_TEXT}}"
    ],
    "description": "arrow function short form export"
  },
  "Arrow fn:short": {
    "scope": "javascript",
    "prefix": "afs",
    "body": [
      "const ${1:${TM_FILENAME_BASE}} = ($2) => ${3:${TM_SELECTED_TEXT}}"
    ],
    "description": "arrow function short form"
  },
  // CSS
  "Margin 0 auto": {
    "scope": "css",
    "prefix": "ma",
    "body": ["margin: ${1:0} auto;"],
    "description": "margin 0 auto"
  },
  "Center Flex": {
    "scope": "css",
    "prefix": "cflex",
    "body": [
      "display: flex;",
      "align-items: center;",
      "justify-content: center;"
    ],
    "description": "center flex"
  },
  "Center Grid": {
    "scope": "css",
    "prefix": "cgrid",
    "body": ["display: grid;", "place-content: center;"],
    "description": "center grid"
  }
}
